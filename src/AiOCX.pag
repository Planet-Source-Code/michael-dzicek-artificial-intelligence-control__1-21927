VERSION 5.00
Begin VB.PropertyPage AIProp 
   Caption         =   "AI Properties"
   ClientHeight    =   3690
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   5160
   PaletteMode     =   0  'Halftone
   ScaleHeight     =   3690
   ScaleWidth      =   5160
   Begin VB.Frame Frame2 
      Caption         =   "Add/Update a Statement && Response"
      Height          =   1095
      Left            =   120
      TabIndex        =   3
      Top             =   0
      Width           =   4935
      Begin VB.CommandButton Command1 
         Caption         =   "Add / Update!"
         Height          =   735
         Left            =   4080
         TabIndex        =   6
         Top             =   240
         Width           =   735
      End
      Begin VB.TextBox Text2 
         Height          =   285
         Left            =   1320
         TabIndex        =   5
         Top             =   600
         Width           =   2655
      End
      Begin VB.TextBox Text1 
         Height          =   285
         Left            =   1320
         TabIndex        =   4
         Top             =   240
         Width           =   2655
      End
      Begin VB.Label Label2 
         AutoSize        =   -1  'True
         Caption         =   "Input Statement:"
         Height          =   195
         Left            =   120
         TabIndex        =   8
         Top             =   240
         Width           =   1170
      End
      Begin VB.Label Label1 
         Caption         =   "AI Response:"
         Height          =   255
         Left            =   120
         TabIndex        =   7
         Top             =   600
         Width           =   1095
      End
   End
   Begin VB.Frame Frame1 
      Caption         =   "Inputs && Outputs (Double click to delete an Entry)"
      Height          =   2415
      Left            =   120
      TabIndex        =   0
      Top             =   1200
      Width           =   4935
      Begin VB.ListBox List2 
         Height          =   2010
         ItemData        =   "AiOCX.pgx":0000
         Left            =   2520
         List            =   "AiOCX.pgx":0002
         TabIndex        =   2
         Top             =   240
         Width           =   2295
      End
      Begin VB.ListBox List1 
         Height          =   2010
         ItemData        =   "AiOCX.pgx":0004
         Left            =   120
         List            =   "AiOCX.pgx":0006
         TabIndex        =   1
         Top             =   240
         Width           =   2295
      End
   End
End
Attribute VB_Name = "AIProp"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit
'shorten the name of the aiunit for programming convenience
Dim AI As AiUnit

Private Sub Command1_Click()
Dim ItExists As Long
'First, Check to make sure that Both the Statement and Response fields are filled in
If Text1.Text > "" And Text2.Text > "" Then
 'Run through the Statement List to make sure that the Newly Input Statement isnt already there
 For ItExists = 0 To (List1.ListCount - 1)
  'We use the CleanUpThisMess Statement here to ensure that input statement isnt just a rework of a previous one
  If SelectedControls(0).CleanUpThisMess(Text1.Text) = List1.List(ItExists) Then Exit For
 Next
 'At this point the the previous entry in the lists is overwritten if one was alreadyt found
 'If the previous loop did not find the statement, then this will just add the new statement to the end of the lists
 List1.List(ItExists) = SelectedControls(0).CleanUpThisMess(Text1.Text)
 List2.List(ItExists) = Text2.Text
 'Empty the textboxes and set foceus to the Statement box, just for cosmetic purposes
 Text1.Text = ""
 Text2.Text = ""
 Text1.SetFocus
Else
 'in case one of the earlier text boxes was not filled in, display and error, and set focus to the appropriate box.
 MsgBox "Enter both a valid Input and Output statement."
 If Text2.Text = "" Then Text2.SetFocus
 If Text1.Text = "" Then Text1.SetFocus
End If
End Sub

Private Sub List1_Click()
'Match up the listfocuses so that we can visually see which statement goes with which response.
List2.ListIndex = List1.ListIndex
'Fill the statement/resposne textboxes with the selected entry, just in case someone wants to easily modify it.
Text1.Text = List1.List(List1.ListIndex)
Text2.Text = List2.List(List2.ListIndex)
End Sub

Private Sub List1_DblClick()
'Delete the entries in the lists, because after all, thats why the list was double clicked.
List1.RemoveItem List1.ListIndex
List2.RemoveItem List2.ListIndex
'Clean out the textboxes just in case the double clicking caused them to be filled with the now deleted data.
Text1.Text = ""
Text2.Text = ""
End Sub

Private Sub List2_Click()
'Match up the listfocuses so that we can visually see which statement goes with which response.
List1.ListIndex = List2.ListIndex
'Fill the statement/resposne textboxes with the selected entry, just in case someone wants to easily modify it.
Text1.Text = List1.List(List1.ListIndex)
Text2.Text = List2.List(List2.ListIndex)
End Sub

Private Sub List2_DblClick()
'Delete the entries in the lists, because after all, thats why the list was double clicked.
List1.RemoveItem List1.ListIndex
List2.RemoveItem List2.ListIndex
'Clean out the textboxes just in case the double clicking caused them to be filled with the now deleted data.
Text1.Text = ""
Text2.Text = ""
End Sub

Private Sub PropertyPage_ApplyChanges()
Dim Counter As Integer
'Clear the selected unit's lists so that there is no repeat data in the unit, which allows for potential errors
SelectedControls(0).DumpLists
'Refill the selected AIUnit's statement/response lists with the lists that are contained within the property page.
For Counter = 0 To (List1.ListCount - 1)
 SelectedControls(0).AddStatement List1.List(Counter), List2.List(Counter)
Next
End Sub

Private Sub PropertyPage_SelectionChanged()
Dim Statements As AIStatement, Counter As Long
'Empty out the propery page to keep it from overlapping the data of more than one aiunit
List1.Clear
List2.Clear
'Refill the data in the property page with that of the newly selected AIUnit
For Counter = 0 To (SelectedControls(0).StatementAmount - 1)
 Statements = SelectedControls(0).GetStatement(Counter)
 List1.AddItem Statements.Input
 List2.AddItem Statements.Response
Next
End Sub
